---
title: "Predicting of the pulmunary TB cases using clinical"
author: "Patrick Kaggwa"
date: "12/03/2024"
output: html_document
---

# Setup

```{r}
# Load required libraries
library(tidymodels)
library(readxl)
library(gtsummary)
library(ggplot2)
library(forcats)
```


Load the data.

```{r}
#Path to data. Note the use of the here() package and not absolute paths
data_location <- here::here("data","processed-data","madaproject.rds")
#load data
madaproject <- readRDS(data_location)
colnames(madaproject)
```

# Data exploration through tables

Showing a bit of code to produce and save a summary table.


```{r}
summary_df = skimr::skim(madaproject)
print(summary_df)
# save to file
summarytable_file = here("results", "tables","summarytable.rds")
saveRDS(summary_df, file = summarytable_file)
```


# Data exploration through figures

Histogram plots for the continuous outcomes. 

I will look at age

```{r}
# Create the ggplot age plot
ageplot <- madaproject %>%
  ggplot(aes(x = Age, fill = ..count..)) +
  geom_histogram(color = "black", bins = 30) +  # Adjust 'bins' as needed
  scale_fill_gradient(low = "blue", high = "red")  # Specify gradient colors
# Plot the age distribution histogram
print(ageplot)

# Specify the file path to save the plot
figure_file <- here("results", "figures", "age_distribution.png")

# Save the plot as a PNG file
ggsave(filename = figure_file, plot = ageplot)


```

Now Oxygen consumption

```{r}
oxygencons <- madaproject %>% ggplot(aes(x=oxygencons, fill = ..count..)) + geom_histogram() 
plot(oxygencons)
figure_file = here("results","figures", "oxygenconsumption.png")
ggsave(filename = figure_file, plot=oxygencons) 
```

```{r}
# Boxplot for Age vs tb
age_boxplot <- ggplot(madaproject, aes(x = tb, y = Age, fill = tb)) +
  geom_boxplot() +
  labs(title = "Boxplot of Age vs. tb",
       x = "tb",
       y = "Age") +
  scale_fill_discrete(name = "tb")
figure_file = here("results","figures", "age_boxplot.png")
ggsave(filename = figure_file, plot=age_boxplot) 
```



```{r}

# Boxplot for oxygencons vs tb
oxygencons_boxplot <- ggplot(madaproject, aes(x = tb, y = oxygencons, fill = tb)) +
  geom_boxplot() +
  labs(title = "Boxplot of oxygencons vs. tb",
       x = "tb",
       y = "oxygencons") +
  scale_fill_discrete(name = "tb")
figure_file = here("results","figures", "oxygencons_boxplot.png")
ggsave(filename = figure_file, plot=oxygencons_boxplot) 
```

```{r}
library(ggplot2)

# Create scatter plot
scatter_plot <- ggplot(madaproject, aes(x = oxygencons, y = Age, color = tb)) +
  geom_point() +
  labs(title = "Age vs. Oxygen Consumption Stratified by TB Status",
       x = "Oxygen Consumption",
       y = "Age",
       color = "TB Status")


figure_file = here("results","figures", "age_oxygenconsscatter_plot.png")
ggsave(filename = figure_file, plot=scatter_plot) 
```
Creating a table of characteristics 

```{r}
library(dplyr)
library(gtsummary)

# Convert non-numeric variables to character
madaproject <- madaproject %>%
  mutate(across(where(is.factor), as.character))

# Define variables of interest (excluding "Age" and "oxygencons")
variables <- c("Gender", "Asthma", "Smoke", "Alcohol", "feverstatus", 
               "Weightloss", "coughstatus", "Sputumproduction", 
               "BloodinSputum", "cxrconclusion_chestxray", 
               "homefuel", "hivstatus")

# Create a summary table with specified variable types
characteristics <- madaproject %>%
  select(all_of(variables), tb) %>%
  tbl_summary(
    by = tb,
    type = everything() ~ "categorical"
  )

# Convert tbl_summary object to data frame and assign column names
characteristics <- as.data.frame(characteristics)
column_names <- c("Characteristic", "No TB", "With TB")
names(characteristics) <- column_names

# Print the summary table
print(characteristics)
 
# Save table


summarytable_file <- here("results", "tables", "characteristics.rds")
saveRDS(characteristics, file = summarytable_file)

```


This is just my code to use a for loop 
```{r}


# Define variable types
categorical_vars <- c("Gender", "Asthma", "Smoke", "Alcohol", "feverstatus", 
                      "Weightloss", "coughstatus", "Sputumproduction", 
                      "BloodinSputum", "cxrconclusion_chestxray", 
                      "homefuel", "hivstatus", "tb")
numerical_vars <- c("Age", "oxygencons")

# Set theme with white text
my_theme <- theme_minimal() +
  theme(
    text = element_text(color = "white"),
    axis.text = element_text(color = "white"),
    axis.title = element_text(color = "white")
  )

# EDA for categorical variables
for (var in categorical_vars) {
  p <- madaproject %>%
    count(!!sym(var)) %>%
    ggplot(aes(x = fct_reorder(!!sym(var), n), y = n)) +
    geom_bar(stat = "identity", fill = "skyblue") +
    labs(title = paste("Distribution of", var), x = var, y = "Count") +
    my_theme +
    theme(axis.text.x = element_text(angle = 45, hjust = 1))
  
  # Save the plot
  figure_file <- here::here("results", "figures", paste0(var, "_barplot.png"))
  ggsave(filename = figure_file, plot = p)
}

# EDA for numerical variables
for (var in numerical_vars) {
  p <- madaproject %>%
    ggplot(aes(x = !!sym(var))) +
    geom_histogram(fill = "skyblue", color = "grey", bins = 20) +
    labs(title = paste("Histogram of", var), x = var, y = "Frequency") +
    my_theme
  
  
}

  
```


# Notes

If additional steps need to be done please let me and fix the issues


